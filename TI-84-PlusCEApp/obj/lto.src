	section	.text,"ax",@progbits
	assume	adl = 1
	section	.text,"ax",@progbits
	public	_str_replace
_str_replace:
	ld	hl, -24
	call	__frameset
	ld	hl, (ix + 6)
	ld	bc, 0
	ld	de, 0
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jp	z, BB0_14
	ld	hl, (ix + 9)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jp	z, BB0_14
	ld	(ix - 3), de
	push	hl
	call	_strlen
	push	hl
	pop	de
	pop	hl
	push	de
	pop	hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	nz, BB0_4
	ld	bc, 0
	jp	BB0_14
BB0_4:
	ld	hl, (ix + 12)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	nz, BB0_6
	ld	hl, _.str
BB0_6:
	ld	bc, 1
	ld	(ix - 6), bc
	ld	(ix - 18), hl
	push	hl
	ld	(ix - 9), de
	call	_strlen
	pop	de
	ld	(ix - 21), hl
	ld	de, (ix - 9)
	or	a, a
	sbc	hl, de
	ld	(ix - 12), hl
	ld	hl, (ix + 6)
BB0_7:
	ld	de, (ix + 9)
	push	de
	push	hl
	call	_strstr
	pop	de
	pop	de
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	z, BB0_9
	ld	de, (ix - 9)
	add	hl, de
	ld	de, (ix - 3)
	dec	de
	ld	(ix - 3), de
	ld	iy, (ix - 6)
	ld	de, (ix - 12)
	add	iy, de
	ld	(ix - 6), iy
	jr	BB0_7
BB0_9:
	ld	hl, (ix + 6)
	push	hl
	call	_strlen
	pop	de
	ld	de, (ix - 6)
	add	hl, de
	push	hl
	call	_malloc
	pop	de
	add	hl, bc
	or	a, a
	sbc	hl, bc
	ld	bc, 0
	jp	z, BB0_14
	ld	(ix - 24), hl
	ld	(ix - 6), hl
	ld	iy, (ix + 6)
	ld	hl, (ix - 3)
BB0_11:
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	z, BB0_13
	ld	de, (ix + 9)
	push	de
	push	iy
	ld	(ix - 12), iy
	ld	(ix - 3), hl
	call	_strstr
	pop	de
	pop	de
	ld	de, (ix - 12)
	or	a, a
	sbc	hl, de
	ld	(ix - 15), hl
	push	hl
	ld	hl, (ix - 12)
	push	hl
	ld	hl, (ix - 6)
	push	hl
	call	_strncpy
	pop	hl
	pop	hl
	pop	hl
	ld	de, (ix - 15)
	ld	iy, (ix - 6)
	add	iy, de
	ld	(ix - 6), iy
	ld	hl, (ix - 18)
	push	hl
	push	iy
	call	_strcpy
	ld	iy, (ix - 12)
	pop	hl
	pop	hl
	ld	de, (ix - 21)
	ld	hl, (ix - 6)
	add	hl, de
	ld	(ix - 6), hl
	ld	de, (ix - 9)
	ld	hl, (ix - 15)
	add	hl, de
	ex	de, hl
	add	iy, de
	ld	hl, (ix - 3)
	inc	hl
	jr	BB0_11
BB0_13:
	push	iy
	ld	hl, (ix - 6)
	push	hl
	call	_strcpy
	pop	hl
	pop	hl
	ld	bc, (ix - 24)
BB0_14:
	push	bc
	pop	hl
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_AIsOne
_AIsOne:
	ld	hl, -18
	call	__frameset
	ld	hl, (ix + 6)
	ld	(ix - 6), hl
	ld	hl, 40000
	ld	bc, _.str
	ld	(ix - 15), bc
	ld	de, -200
	ld	iy, -400
	ld	bc, (ix + 9)
	or	a, a
	sbc	hl, bc
	ld	(ix - 3), hl
BB1_1:
	ld	bc, 200
	push	de
	pop	hl
	or	a, a
	sbc	hl, bc
	jr	z, BB1_8
	ld	hl, (ix - 3)
	ld	(ix - 9), hl
	lea	bc, iy
BB1_3:
	push	bc
	pop	hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	z, BB1_7
	ld	(ix - 12), de
	ld	hl, (ix - 6)
	push	bc
	pop	de
	or	a, a
	sbc	hl, bc
	ld	hl, (ix - 9)
	jr	nz, BB1_6
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	z, BB1_10
BB1_6:
	push	de
	pop	bc
	inc	bc
	ld	de, (ix - 12)
	add	hl, de
	ld	(ix - 9), hl
	jr	BB1_3
BB1_7:
	inc	de
	ld	hl, (ix - 6)
	dec	hl
	ld	(ix - 6), hl
	ld	hl, -200
	push	hl
	pop	bc
	ld	hl, (ix - 3)
	add	hl, bc
	ld	(ix - 3), hl
	ld	iy, -400
	jr	BB1_1
BB1_8:
	ld	hl, _.str.4
BB1_9:
	ld	sp, ix
	pop	ix
	ret
BB1_10:
	ld	bc, 0
	ld	hl, (ix - 12)
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	ld	hl, _.str
	jp	m, BB1_12
	ld	hl, _.str.1
BB1_12:
	ld	(ix - 18), hl
	ex	de, hl
	ld	de, 200
	add	hl, de
	ld	(ix - 9), hl
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	jp	m, BB1_14
	ld	hl, _.str.1
	ld	(ix - 15), hl
BB1_14:
	ld	hl, 14
	push	hl
	call	_malloc
	ld	(ix - 3), hl
	pop	hl
	ld	hl, 14
	push	hl
	call	_malloc
	ld	(ix - 6), hl
	pop	hl
	ld	hl, (ix - 12)
	push	hl
	ld	hl, (ix - 18)
	push	hl
	ld	hl, (ix + 12)
	push	hl
	ld	hl, _.str.2
	push	hl
	ld	hl, 14
	push	hl
	ld	hl, (ix - 3)
	push	hl
	call	_snprintf
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix - 9)
	push	hl
	ld	hl, (ix - 15)
	push	hl
	ld	hl, (ix + 12)
	push	hl
	ld	hl, _.str.2
	push	hl
	ld	hl, 14
	push	hl
	ld	hl, (ix - 6)
	push	hl
	call	_snprintf
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix - 6)
	push	hl
	ld	hl, (ix - 3)
	push	hl
	call	_strcmp
	pop	de
	pop	de
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	nz, BB1_16
	ld	hl, (ix - 3)
	push	hl
	call	_strlen
	push	hl
	pop	de
	pop	hl
	ld	bc, (ix - 3)
	push	bc
	pop	iy
	add	iy, de
	ld	hl, _.str.3
	ld	a, (hl)
	ld	(iy), a
	ld	a, (_.str.3+1)
	ld	(iy + 1), a
	ld	a, (_.str.3+2)
	ld	(iy + 2), a
	push	bc
	pop	hl
	jp	BB1_9
BB1_16:
	ld	hl, (ix - 6)
	push	hl
	ld	hl, (ix - 3)
	push	hl
	call	_strcat
	pop	hl
	pop	hl
	ld	hl, (ix - 3)
	jp	BB1_9
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_GCF
_GCF:
	ld	hl, -9
	call	__frameset
	ld	de, (ix + 6)
	push	de
	pop	hl
	push	de
	pop	iy
	add	iy, iy
	sbc	hl, hl
	push	hl
	pop	bc
	ex	de, hl
	add	hl, bc
	call	__ixor
	push	hl
	pop	de
	ld	hl, (ix + 9)
	push	hl
	pop	iy
	add	iy, iy
	sbc	hl, hl
	push	hl
	pop	bc
	ld	hl, (ix + 9)
	add	hl, bc
	call	__ixor
	push	hl
	pop	iy
	ld	(ix - 3), de
	or	a, a
	sbc	hl, de
	ld	(ix - 9), iy
	jr	c, BB2_2
	ld	iy, (ix - 3)
BB2_2:
	ld	bc, 1
	ld	de, 0
BB2_3:
	lea	hl, iy
	or	a, a
	sbc	hl, de
	jr	z, BB2_8
	ld	(ix - 6), bc
	push	de
	pop	bc
	inc	bc
	ld	hl, (ix - 3)
	call	__iremu
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	nz, BB2_6
	ld	hl, (ix - 9)
	call	__iremu
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	z, BB2_7
BB2_6:
	ld	bc, (ix - 6)
BB2_7:
	inc	de
	jr	BB2_3
BB2_8:
	push	bc
	pop	hl
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_GCF3
_GCF3:
	ld	hl, -9
	call	__frameset
	ld	de, (ix + 6)
	ld	hl, 1
	ld	(ix - 3), hl
	push	de
	pop	hl
	push	de
	pop	iy
	add	iy, iy
	sbc	hl, hl
	push	hl
	pop	bc
	ex	de, hl
	add	hl, bc
	call	__ixor
	push	hl
	pop	de
	ld	hl, (ix + 9)
	push	hl
	pop	iy
	add	iy, iy
	sbc	hl, hl
	push	hl
	pop	bc
	ld	hl, (ix + 9)
	add	hl, bc
	call	__ixor
	ld	(ix - 6), hl
	ld	hl, (ix + 12)
	push	hl
	pop	iy
	add	iy, iy
	push	de
	pop	iy
	ld	de, 2
	sbc	hl, hl
	push	hl
	pop	bc
	ld	hl, (ix + 12)
	add	hl, bc
	call	__ixor
	push	hl
	pop	bc
BB3_1:
	lea	hl, iy
	or	a, a
	sbc	hl, de
	jr	c, BB3_10
	ld	hl, (ix - 6)
	or	a, a
	sbc	hl, de
	jr	c, BB3_10
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	jr	c, BB3_10
	ld	(ix - 9), bc
	lea	hl, iy
	push	de
	pop	bc
	call	__iremu
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	nz, BB3_9
	ld	hl, (ix - 6)
	push	de
	pop	bc
	call	__iremu
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	nz, BB3_9
	ld	hl, (ix - 9)
	push	de
	pop	bc
	call	__iremu
	add	hl, bc
	or	a, a
	sbc	hl, bc
	push	de
	pop	hl
	jr	z, BB3_8
	ld	hl, (ix - 3)
BB3_8:
	ld	(ix - 3), hl
BB3_9:
	ld	bc, (ix - 9)
	inc	de
	jr	BB3_1
BB3_10:
	ld	hl, (ix - 3)
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_AGOne
_AGOne:
	ld	hl, -33
	call	__frameset
	ld	bc, (ix + 6)
	ld	hl, (ix + 9)
	ld	(ix - 9), hl
	ld	de, (ix + 12)
	ld	iy, 62500
	ld	hl, _.str
	ld	(ix - 21), hl
	ld	hl, _.str.4
	ld	(ix - 12), hl
	ex	de, hl
	call	__imulu
	push	hl
	pop	bc
	lea	hl, iy
	or	a, a
	sbc	hl, bc
	ld	(ix - 3), hl
	ld	bc, 250
	ld	de, -250
BB4_1:
	push	de
	pop	hl
	or	a, a
	sbc	hl, bc
	jp	z, BB4_22
	ld	hl, (ix - 3)
	ld	(ix - 15), hl
	ld	hl, -500
	ld	iy, (ix - 9)
BB4_3:
	ld	(ix - 6), hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	z, BB4_7
	ld	(ix - 18), de
	lea	hl, iy
	ld	bc, (ix - 6)
	or	a, a
	sbc	hl, bc
	jr	nz, BB4_6
	ld	hl, (ix - 15)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	z, BB4_8
BB4_6:
	ld	hl, (ix - 6)
	inc	hl
	ld	de, (ix - 18)
	lea	bc, iy
	ld	iy, (ix - 15)
	add	iy, de
	ld	(ix - 15), iy
	push	bc
	pop	iy
	ld	bc, 250
	jr	BB4_3
BB4_7:
	inc	de
	dec	iy
	ld	(ix - 9), iy
	push	bc
	pop	iy
	ld	bc, -250
	ld	hl, (ix - 3)
	add	hl, bc
	lea	bc, iy
	ld	(ix - 3), hl
	jr	BB4_1
BB4_8:
	ld	hl, (ix - 18)
	push	hl
	ld	hl, (ix + 6)
	push	hl
	call	_GCF
	ld	(ix - 24), hl
	pop	hl
	pop	hl
	ld	de, 250
	ld	iy, (ix - 6)
	add	iy, de
	ld	hl, (ix + 12)
	push	hl
	ld	(ix - 6), iy
	push	iy
	call	_GCF
	push	hl
	pop	de
	pop	hl
	pop	hl
	ld	hl, (ix - 18)
	ld	bc, (ix - 24)
	call	__idivs
	ld	bc, 0
	ld	(ix - 30), hl
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	ld	hl, _.str
	jp	m, BB4_10
	ld	hl, _.str.1
BB4_10:
	ld	(ix - 33), hl
	ld	hl, (ix + 12)
	ld	(ix - 15), de
	push	de
	pop	bc
	call	__idivs
	ld	(ix - 27), hl
	ld	de, 0
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	ld	hl, _.str
	jp	m, BB4_12
	ld	hl, _.str.1
BB4_12:
	ld	(ix - 18), hl
	ld	hl, 20
	push	hl
	call	_malloc
	ld	(ix - 9), hl
	pop	hl
	ld	hl, 20
	push	hl
	call	_malloc
	ld	(ix - 3), hl
	pop	hl
	ld	hl, (ix + 6)
	ld	bc, (ix - 24)
	call	__idivs
	ld	de, (ix - 30)
	push	de
	ld	de, (ix - 33)
	push	de
	ld	de, (ix + 15)
	push	de
	push	hl
	ld	hl, _.str.5
	push	hl
	ld	hl, 20
	push	hl
	ld	hl, (ix - 9)
	push	hl
	call	_snprintf
	ld	hl, 21
	add	hl, sp
	ld	sp, hl
	ld	hl, (ix - 6)
	ld	bc, (ix - 15)
	call	__idivs
	ld	de, (ix - 27)
	push	de
	ld	de, (ix - 18)
	push	de
	ld	de, (ix + 15)
	push	de
	push	hl
	ld	hl, _.str.5
	push	hl
	ld	hl, 20
	push	hl
	ld	hl, (ix - 3)
	push	hl
	call	_snprintf
	ld	hl, 21
	add	hl, sp
	ld	sp, hl
	ld	hl, (ix - 3)
	push	hl
	ld	hl, (ix - 9)
	push	hl
	call	_strcmp
	pop	de
	pop	de
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	z, BB4_16
	ld	hl, (ix - 15)
	call	__ineg
	push	hl
	pop	bc
	ld	hl, (ix + 12)
	ld	(ix - 15), bc
	call	__idivs
	push	hl
	pop	de
	ld	bc, 0
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	ld	iy, _.str
	jp	m, BB4_15
	ld	iy, (ix - 18)
BB4_15:
	ld	hl, (ix - 6)
	ld	bc, (ix - 15)
	call	__idivs
	push	de
	push	iy
	ld	de, (ix + 15)
	push	de
	push	hl
	ld	hl, _.str.5
	push	hl
	ld	hl, 20
	push	hl
	ld	hl, (ix - 3)
	push	hl
	call	_snprintf
	ld	hl, 21
	add	hl, sp
	ld	sp, hl
BB4_16:
	ld	hl, (ix - 3)
	push	hl
	ld	hl, (ix - 9)
	push	hl
	call	_strcmp
	pop	de
	pop	de
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jp	nz, BB4_22
	ld	de, (ix - 15)
	push	de
	pop	hl
	ld	bc, 0
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	jp	m, BB4_19
	ld	hl, _.str.1
	ld	(ix - 21), hl
BB4_19:
	push	de
	ld	hl, (ix - 21)
	push	hl
	ld	hl, (ix + 15)
	push	hl
	ld	hl, (ix - 24)
	push	hl
	ld	hl, _.str.5
	push	hl
	ld	hl, 20
	push	hl
	ld	hl, (ix - 3)
	push	hl
	call	_snprintf
	ld	hl, 21
	add	hl, sp
	ld	sp, hl
	ld	hl, (ix + 15)
	push	hl
	ld	hl, _.str.6
	push	hl
	call	_strcat
	pop	hl
	pop	hl
	ld	hl, (ix + 15)
	push	hl
	ld	hl, _.str.6
	push	hl
	ld	hl, (ix - 9)
	push	hl
	call	_str_replace
	ld	(ix - 12), hl
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix + 15)
	push	hl
	ld	hl, _.str.6
	push	hl
	ld	hl, (ix - 3)
	push	hl
	call	_str_replace
	pop	de
	pop	de
	pop	de
	ld	(ix - 3), hl
	push	hl
	ld	hl, (ix - 12)
	push	hl
	call	_strcmp
	pop	de
	pop	de
	add	hl, bc
	or	a, a
	sbc	hl, bc
	ld	hl, _.str.3
	jr	z, BB4_21
	ld	hl, (ix - 3)
BB4_21:
	push	hl
	ld	hl, (ix - 12)
	push	hl
	call	_strcat
	pop	hl
	pop	hl
BB4_22:
	ld	hl, (ix - 12)
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_main
_main:
	ld	hl, -101
	call	__frameset
	lea	hl, ix - 5
	ld	(ix - 92), hl
	lea	hl, ix - 10
	ld	(ix - 89), hl
	lea	hl, ix - 15
	ld	(ix - 86), hl
	lea	hl, ix - 20
	ld	(ix - 83), hl
	lea	hl, ix - 80
	ld	(ix - 101), hl
	ld	iy, -3145600
	call	_os_ClrLCD
	call	_os_HomeUp
	call	_os_DrawStatusBar
	ld	hl, 5
	push	hl
	ld	hl, (ix - 92)
	push	hl
	ld	hl, _.str.7
	push	hl
	call	_os_GetStringInput
	pop	hl
	pop	hl
	pop	hl
	or	a, a
	sbc	hl, hl
	push	hl
	inc	hl
	push	hl
	call	_os_SetCursorPos
	pop	hl
	pop	hl
	ld	hl, 5
	push	hl
	ld	hl, (ix - 89)
	push	hl
	ld	hl, _.str.8
	push	hl
	call	_os_GetStringInput
	pop	hl
	pop	hl
	pop	hl
	or	a, a
	sbc	hl, hl
	push	hl
	ld	hl, 2
	push	hl
	call	_os_SetCursorPos
	pop	hl
	pop	hl
	ld	hl, 5
	push	hl
	ld	hl, (ix - 86)
	push	hl
	ld	hl, _.str.9
	push	hl
	call	_os_GetStringInput
	pop	hl
	pop	hl
	pop	hl
	or	a, a
	sbc	hl, hl
	push	hl
	ld	hl, 3
	push	hl
	call	_os_SetCursorPos
	pop	hl
	pop	hl
	ld	hl, 5
	push	hl
	ld	hl, (ix - 83)
	push	hl
	ld	hl, _.str.10
	push	hl
	call	_os_GetStringInput
	pop	hl
	pop	hl
	pop	hl
	or	a, a
	sbc	hl, hl
	push	hl
	ld	hl, 4
	push	hl
	call	_os_SetCursorPos
	pop	hl
	pop	hl
	ld	hl, _.str.12
	push	hl
	ld	hl, _.str.11
	push	hl
	ld	hl, (ix - 89)
	push	hl
	call	_str_replace
	ld	(ix - 89), hl
	pop	hl
	pop	hl
	pop	hl
	ld	hl, _.str.12
	push	hl
	ld	hl, _.str.11
	push	hl
	ld	hl, (ix - 86)
	push	hl
	call	_str_replace
	ld	(ix - 95), hl
	pop	hl
	pop	hl
	pop	hl
	ld	hl, _.str.12
	push	hl
	ld	hl, _.str.11
	push	hl
	ld	hl, (ix - 83)
	push	hl
	call	_str_replace
	ld	(ix - 98), hl
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix - 89)
	push	hl
	call	_atoi
	ld	(ix - 86), hl
	pop	hl
	ld	hl, (ix - 95)
	push	hl
	call	_atoi
	ld	(ix - 83), hl
	pop	hl
	ld	hl, (ix - 98)
	push	hl
	call	_atoi
	ld	de, (ix - 86)
	push	hl
	pop	iy
	pop	hl
	ld	bc, -1
	push	de
	pop	hl
	or	a, a
	sbc	hl, bc
	jr	nz, BB5_4
	ld	hl, (ix - 83)
	call	__ineg
	push	hl
	pop	de
	lea	hl, iy
	call	__ineg
	ld	bc, (ix - 92)
	push	bc
	push	hl
	push	de
	call	_AIsOne
	push	hl
	pop	de
BB5_2:
	pop	hl
	pop	hl
	pop	hl
	ld	hl, _.str.4
	push	hl
	ld	(ix - 83), de
	push	de
	call	_strcmp
	pop	de
	pop	de
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	nz, BB5_6
	ld	hl, (ix - 83)
	jp	BB5_14
BB5_4:
	ld	bc, 1
	push	de
	pop	hl
	or	a, a
	sbc	hl, bc
	jr	nz, BB5_7
	ld	hl, (ix - 92)
	push	hl
	push	iy
	ld	hl, (ix - 83)
	push	hl
	call	_AIsOne
	ld	(ix - 83), hl
	pop	de
	pop	de
	pop	de
	push	hl
	call	_os_PutStrLine
	pop	hl
	ld	hl, _.str.4
	push	hl
	ld	hl, (ix - 83)
	push	hl
	call	_strcmp
	pop	de
	pop	de
	add	hl, bc
	or	a, a
	sbc	hl, bc
	ld	hl, (ix - 83)
	push	hl
	call	nz, _free
	jp	BB5_16
BB5_6:
	ld	hl, (ix - 83)
	push	hl
	scf
	sbc	hl, hl
	push	hl
	ld	hl, _.str.13
	push	hl
	ld	hl, (ix - 101)
	push	hl
	call	_sprintf
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix - 101)
	jp	BB5_14
BB5_7:
	ld	bc, (ix - 83)
	push	bc
	pop	hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	nz, BB5_10
	push	de
	pop	hl
	ld	bc, 0
	or	a, a
	sbc	hl, bc
	ld	bc, (ix - 83)
	call	pe, __setflag
	jp	p, BB5_10
	ex	de, hl
	call	__ineg
	push	hl
	pop	de
	lea	hl, iy
	call	__ineg
	ld	bc, (ix - 92)
	push	bc
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	push	de
	call	_AGOne
	push	hl
	pop	de
	pop	hl
	jp	BB5_2
BB5_10:
	push	iy
	push	bc
	push	de
	ld	(ix - 89), iy
	call	_GCF3
	push	hl
	pop	bc
	pop	hl
	pop	hl
	pop	hl
	ld	de, 2
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	jp	m, BB5_13
	ld	hl, (ix - 86)
	call	__idivs
	push	hl
	pop	de
	ld	hl, (ix - 83)
	call	__idivs
	ld	(ix - 86), hl
	ld	hl, (ix - 89)
	ld	(ix - 83), bc
	call	__idivs
	push	hl
	pop	iy
	push	de
	pop	hl
	ld	bc, -1
	or	a, a
	sbc	hl, bc
	jp	nz, BB5_19
	ld	hl, (ix - 86)
	call	__ineg
	push	hl
	pop	de
	lea	hl, iy
	call	__ineg
	ld	bc, (ix - 92)
	push	bc
	push	hl
	push	de
	call	_AIsOne
	ld	(ix - 86), hl
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix - 83)
	call	__ineg
	ld	de, (ix - 86)
	push	de
	jp	BB5_23
BB5_13:
	ld	hl, (ix - 92)
	push	hl
	ld	hl, (ix - 89)
	push	hl
	ld	hl, (ix - 83)
	push	hl
	ld	hl, (ix - 86)
	push	hl
	call	_AGOne
	ld	(ix - 83), hl
	pop	de
	pop	de
	pop	de
	pop	de
BB5_14:
	push	hl
	call	_os_PutStrLine
	pop	hl
	ld	hl, (ix - 83)
BB5_15:
	push	hl
	call	_free
BB5_16:
	pop	hl
	ld	de, 5
	or	a, a
	sbc	hl, hl
	push	hl
	push	de
	call	_os_SetCursorPos
	pop	hl
	pop	hl
	ld	hl, _.str.14
	push	hl
	call	_os_PutStrLine
	pop	hl
BB5_17:
	call	_os_GetCSC
	or	a, a
	jr	z, BB5_17
	or	a, a
	sbc	hl, hl
	ld	sp, ix
	pop	ix
	ret
BB5_19:
	push	de
	pop	hl
	ld	bc, 1
	or	a, a
	sbc	hl, bc
	ld	hl, (ix - 92)
	ld	bc, (ix - 86)
	jr	nz, BB5_21
	push	hl
	push	iy
	push	bc
	call	_AIsOne
	ld	(ix - 86), hl
	jr	BB5_22
BB5_21:
	push	hl
	push	iy
	push	bc
	push	de
	call	_AGOne
	ld	(ix - 86), hl
	pop	de
BB5_22:
	pop	de
	pop	de
	pop	de
	push	hl
	ld	hl, (ix - 83)
BB5_23:
	push	hl
	ld	hl, _.str.13
	push	hl
	ld	hl, (ix - 101)
	push	hl
	call	_sprintf
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix - 101)
	push	hl
	call	_os_PutStrLine
	pop	hl
	ld	hl, (ix - 86)
	jr	BB5_15
	section	.text,"ax",@progbits

	section	.rodata,"a",@progbits
	private	_.str
_.str:
	db	1 dup 0

	section	.rodata,"a",@progbits
	private	_.str.1
_.str.1:
	db	"+", 0

	section	.rodata,"a",@progbits
	private	_.str.2
_.str.2:
	db	"(%s%s%d)", 0

	section	.rodata,"a",@progbits
	private	_.str.3
_.str.3:
	db	"^2", 0

	section	.rodata,"a",@progbits
	private	_.str.4
_.str.4:
	db	"Cannot Factor", 0

	section	.rodata,"a",@progbits
	private	_.str.5
_.str.5:
	db	"(%d%s%s%d)", 0

	section	.rodata,"a",@progbits
	private	_.str.6
_.str.6:
	db	"1", 0

	section	.rodata,"a",@progbits
	private	_.str.7
_.str.7:
	db	"Variable: ", 0

	section	.rodata,"a",@progbits
	private	_.str.8
_.str.8:
	db	"A: ", 0

	section	.rodata,"a",@progbits
	private	_.str.9
_.str.9:
	db	"B: ", 0

	section	.rodata,"a",@progbits
	private	_.str.10
_.str.10:
	db	"C: ", 0

	section	.rodata,"a",@progbits
	private	_.str.11
_.str.11:
	db	26, 0

	section	.rodata,"a",@progbits
	private	_.str.12
_.str.12:
	db	"-", 0

	section	.rodata,"a",@progbits
	private	_.str.13
_.str.13:
	db	"%d%s", 0

	section	.rodata,"a",@progbits
	private	_.str.14
_.str.14:
	db	"Press Any Key To Exit", 0

	ident	"clang version 15.0.0 (https://github.com/jacobly0/llvm-project 6d9aa7a16db70f3d02ae304b08d4a03011281fef)"
	extern	__Unwind_SjLj_Register
	extern	__frameset
	extern	_malloc
	extern	_os_PutStrLine
	extern	_sprintf
	extern	_strstr
	extern	_strcmp
	extern	_strncpy
	extern	_snprintf
	extern	_os_ClrLCD
	extern	_strlen
	extern	_os_DrawStatusBar
	extern	__idivs
	extern	__setflag
	extern	__ixor
	extern	__iremu
	extern	_strcpy
	extern	__Unwind_SjLj_Unregister
	extern	__imulu
	extern	_strcat
	extern	__ineg
	extern	_os_GetStringInput
	extern	_atoi
	extern	_os_GetCSC
	extern	_free
	extern	_os_HomeUp
	extern	_os_SetCursorPos
